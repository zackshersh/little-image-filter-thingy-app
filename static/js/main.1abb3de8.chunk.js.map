{"version":3,"sources":["components/Canvas.js","components/FileUpload.js","utils.js","components/SaveAndLoad.js","pixelFilters.js","blockFilters.js","displacementFilters.js","ImageFunctions.js","components/FilterOption.js","components/AddFilter.js","components/PreviewRes.js","components/ExportButton.js","components/InfoButton.js","components/ImageDisplay.js","components/filter-cards/InvertCard.js","components/Slider.js","components/filter-cards/SaturateCard.js","components/filter-cards/NoiseCard.js","components/filter-cards/ExposureCard.js","components/filter-cards/ThresholdCard.js","components/ColorInput.js","components/filter-cards/GradientMapCard.js","components/filter-cards/BitmapCard.js","components/filter-cards/PixelateCard.js","components/Checkbox.js","components/filter-cards/WaveCard.js","components/FilterCardCont.js","components/SettingSuite.js","components/Input.js","components/Select.js","components/ExportModal.js","assets/image-filter-app.png","components/InfoModal.js","App.js","index.js"],"names":["Canvas","useState","transX","transY","className","style","transform","onMouseDown","e","target","onmousemove","onmouseup","FileUpload","eventHandler","uploaded","setUploaded","uploadedStr","setUploadedStr","document","querySelector","click","display","onChange","files","name","id","type","lerp","a","b","t","rndmInt","max","Math","floor","random","rndmSign","xyToIndex","x","y","w","fillPixelRect","imageData","h","r","g","data","y2","x2","i","width","componentToHex","c","hex","toString","length","rgbToHex","fillDisplacementGaps","newImageData","ImageData","height","set","nData","console","log","i2","invert","pixel","exposure","value","threshold","cutoff","gradientMap","darkColor","lightColor","avgNormalized","noise","monochromatic","rndmVal","saturation","amount","grayVal","blendR","blendG","blendB","pixelate","pixelWidth","pixelsPerRow","widthPerPixel","mainImage","drawResFactor","index","bigPixelValues","event","bitmap","canvas","blockScaleFactor","randomPattern","pattern","patternW","sqrt","nums","len","push","splice","brightness","mappedBrightness","patternIndex","wave","xAmplitude","xWavelength","xShift","yAmplitude","yWavelength","yShift","warp","i1","sin","Image","this","image","activeFilters","filtersCompiled","renderWorkers","drawCountdown","drawInterval","ctx","getContext","setCanvas","compileFilters","draw","filters","activeFilter","filterIndex","byPixelFilterBatch","forEach","filter","active","img","imgStyles","getComputedStyle","fillStyle","beginPath","fillRect","closePath","finalRender","performanceStart","performance","now","drawImage","filteredData","applyFilters","putImageData","performanceStop","getImageData","reduce","previousVal","currentVal","newData","Array","operation","options","filename","scale","format","jpegQuality","prevResFacSave","renderToImg","prevImg","remove","imageElem","createElement","blobCallback","blob","url","window","URL","createObjectURL","href","download","toBlob","ByPixelFilter","ByBlockFilter","FilterOption","handler","title","defaultOptions","AddFilter","refreshApp","expanded","setExpanded","setWidth","setHeight","padding","setPadding","handleExpand","textContent","handleFilterOption","dataset","allFilters","filterNames","JSON","parse","tc","toLowerCase","addFilter","paddingBottom","paddingTop","stringify","filler","PreviewRes","previewRes","setPreviewRes","optionsExpanded","setOptionsExpanded","handleResButton","buttonVal","val","parseFloat","ExportButton","setDisplay","class","alert","InfoButton","ImageDisplay","setExportDisplay","setInfoDisplay","handleZoom","zoom","duration","canvasWidth","targetW","parseInt","split","InvertCard","filterActive","checked","defaultChecked","Slider","min","step","displayVal","setDisplayVal","defaultValue","onMouseUp","SaturationCard","NoiseCard","monochr","setMonochr","ExposureCard","ThresholdCard","timeRemaining","countdown","ColorInput","colorVal","setColorVal","setInterval","clearInterval","GradientMapCard","darkVal","setDarkVal","result","exec","hexToRgb","BitmapCard","randomBitmap","PixelateCard","Checkbox","WaveCard","warpActive","setWarpActive","FilterCardCont","filterCards","map","operationType","SettingSuite","uploadHandler","Input","size","suffix","extraText","ifExtraText","ifTitle","Select","optionItems","option","ExportModal","exportSize","setExportSize","pixelSize","setPixelSize","setFormat","setJpegQuality","setFilename","useEffect","updatePixelSize","fullW","fullH","sizedW","sizedH","handleJpegQuality","slice","ifJpeg","exportImage","InfoModal","src","logoType","App","refresh","setRefresh","exportDisplay","infoDisplay","imageUploaded","newImg","onload","setImage","init","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1abb3de8.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react';\n\nlet filters = [];\nlet img;\n\nconst Canvas = () => {\n\n    const [transX, setTransX] = useState(0)\n    const [transY, setTransY] = useState(0)\n\n    const drag = (e) => {\n        let pos1, pos2, pos3, pos4 = 0;\n        \n        // pos3 = e.clientX;\n        // pos4 = e.clientY;\n\n        // setTransX(e.clientX)\n        // setTransY(e.clientY)\n\n        e.target.onmousemove = function(e){\n            // e.preventDefault()\n\n            // let xNormalized = e.clientX - e.target.width/2;\n            // let yNormalized = e.clientY - e.target.height/2;\n\n            // console.log(xNormalized,yNormalized)\n\n            // // pos1 = transX - e.clientX;\n            // // pos2 = transY - e.clientY;\n\n            // setTransX(xNormalized)\n            // setTransY(yNormalized)\n\n            // console.log(transX)\n            // console.log(transY)\n\n            // pos3 = e.clientX;\n            // pos4 = e.clientY;\n\n            // // e.target.style.top = (e.target.offsetTop - pos2) + \"px\"\n            // // e.target.style.left = (e.target.offsetLeft - pos1) + \"px\"\n            \n        }\n\n        e.target.onmouseup = function(e){\n            e.target.onmouseup = null;\n            e.target.onmousemove = null;\n        }\n    }\n\n    return (\n        <div className=\"canvas-component flex-center\">\n            <canvas style={{transform:`translate(${transX+'px'},${transY+'px'})`}} onMouseDown={drag} className=\"imageCanv\"></canvas>\n        </div>\n    )\n\n}\n\nexport default Canvas;","import React, {useEffect,useState} from \"react\";\n\n\nconst FileUpload = ({eventHandler}) => {\n\n\n    const [uploaded,setUploaded] = useState(false);\n\n    const [uploadedStr,setUploadedStr] = useState('No File Uploaded')\n\n    const handleChange = (e) => {\n        eventHandler(e.target.files)\n        setUploadedStr(e.target.files[0].name)\n        setUploaded(true)\n    }\n\n    const handleUploadButton = () => {\n        document.querySelector('#imageUpload').click()\n    }\n\n    \n\n    return (\n        <div className={`File-Upload ${uploaded ? 'File-Upload File-Upload-True' : 'File-Upload-False'}`}>\n            <button onMouseDown={handleUploadButton}>Upload</button>\n            <p>{uploadedStr}</p>\n            <input style={{display:'none'}} onChange={handleChange} id=\"imageUpload\" type=\"file\"></input>\n        </div>\n    )\n}\n\nexport default FileUpload;","import Canvas from \"./components/Canvas\"\n\nexport function waitASec(time){\n    return new Promise((resolve,reject) => {\n        setTimeout(function(){\n            resolve('yuh')\n        },time)\n    })\n}\n\nexport function lerp(a,b,t){\n    return a + ((b-a)*t)\n}\n\nexport function rndmInt(max){\n    return Math.floor(Math.random()*(max))\n}\n\nexport function rndmSign(){\n    if(Math.random() > 0.5){\n        return 1\n    } else {\n        return -1\n    }\n}\n\nexport function xyToIndex(x,y,w){\n    return (y*(w*4))+(x*4)\n}\n\nexport function dist(x1,y1,x2,y2){\n    return Math.hypot(x2-x1,y2-y1);\n}\n\nexport function fillPixelRect(imageData,x,y,w,h,[r,g,b,a]){\n    let data = imageData.data;\n    for(var y2=0;y2<h;y2++){\n        for(var x2=0;x2<w;x2++){\n\n            let i = xyToIndex(x+x2,y+y2,imageData.width);\n\n            data[i] = r;\n            data[i+1] = g;\n            data[i+2] = b;\n            data[i+3] = a;\n\n        }\n    }\n}\n\nexport function easeIn(t){\n    return t*t\n}\n\nexport function easeOut(t){\n    return 1 - Math.pow((1-t),2)\n}\n\n\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n  \nexport function rgbToHex([r, g, b]) {\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    \n\n    return result ? [\n      parseInt(result[1], 16),\n      parseInt(result[2], 16),\n      parseInt(result[3], 16)\n     ] : null;\n}\n\nexport function fillDisplacementGaps(imageData){\n\n    let data = imageData.data\n\n    let newImageData = new ImageData(imageData.width,imageData.height);\n    newImageData.data.set(data);\n    let nData = newImageData.data;\n\n    console.log('%cFILLING','color:orange')\n\n    for(var y=0;y<imageData.height;y++){\n        for(var x=0;x<imageData.width;x++){\n            let i = xyToIndex(x,y,imageData.width);\n\n\n            if(data[i+3] > 0){\n                continue;\n            }\n\n\n\n            // console.log(i)\n            // console.log(x)\n            // console.log(xyToIndex(x+1,y,imageData.width))\n            // console.log(x+1)\n\n\n            if(data[xyToIndex(x+1,y,imageData.width)+3] > 0){\n                let i2 = xyToIndex(x+1,y,imageData.width);\n                nData[i] = data[i2]\n                nData[i+1] = data[i2+1]\n                nData[i+2] = data[i2+2]\n                nData[i+3] = data[i2+3]\n            } else if(data[xyToIndex(x,y+1,imageData.width)+3] > 0){\n                let i2 = xyToIndex(x,y+1,imageData.width);\n                nData[i] = data[i2]\n                nData[i+1] = data[i2+1]\n                nData[i+2] = data[i2+2]\n                nData[i+3] = data[i2+3]\n            } else if(data[xyToIndex(x+1,y+1,imageData.width)+1] > 0){\n                let i2 = xyToIndex(x+1,y+1,imageData.width);\n                nData[i] = data[i2]\n                nData[i+1] = data[i2+1]\n                nData[i+2] = data[i2+2]\n                nData[i+3] = data[i2+3]\n            }\n        }\n    }\n\n\n    return newImageData\n}","import React, {useState} from 'react';\n\nconst SaveAndLoad = () => {\n\n    \n\n\n    return (\n        <div className=\"Save-And-Load Menu-Bar-Cont\">\n            <button>Save/Load</button>\n            <div className=\"Save-And-Load-Options\">\n                <button>Save Preset</button>\n            </div>\n        </div>\n    )\n}\n\nexport default SaveAndLoad;","\nimport { lerp, rndmInt, rndmSign } from \"./utils\"\n\n\nexport function invert(pixel){\n    let r = 255 - pixel[0]\n    let g = 255 - pixel[1]\n    let b = 255 - pixel[2]\n    let a = pixel[3]\n    return [Math.floor(r),Math.floor(g),Math.floor(b),Math.floor(pixel[3])];\n}\n\nexport function exposure(pixel,{value=40}){\n    let r = pixel[0] + value;\n    let g = pixel[1] + value;\n    let b = pixel[2] + value;\n    let a = pixel[3];\n    return [r,g,b,a]\n}\n\nexport function threshold(pixel,{cutoff=120}){\n    let avg = (pixel[0]+pixel[1]+pixel[2])/3;\n    if(avg > cutoff){\n        return [255,255,255, pixel[3]]\n    } else {\n        return [0,0,0,255, pixel[3]]\n    }\n}\n\nexport function gradientMap(pixel,{darkColor=[0,0,0],lightColor=[255,255,255]}){\n\n    // darkColor will replace the darkest parts of the original image, light will do the lightest\n\n    let avg = (pixel[0]+pixel[1]+pixel[2])/3\n    \n    let avgNormalized = avg/255;\n\n    let r = lerp(darkColor[0],lightColor[0],avgNormalized);\n    let g = lerp(darkColor[1],lightColor[1],avgNormalized);\n    let b = lerp(darkColor[2],lightColor[2],avgNormalized);\n\n    return [Math.floor(r),Math.floor(g),Math.floor(b),Math.floor(pixel[3])];\n\n}\n\nexport function noise(pixel,{max=50,monochromatic=true}){\n\n\n    if(monochromatic){\n        let rndmVal = rndmInt(max) * rndmSign()\n\n        let r = pixel[0] + rndmVal\n        let g = pixel[1] + rndmVal\n        let b = pixel[2] + rndmVal\n        return [Math.floor(r),Math.floor(g),Math.floor(b),Math.floor(pixel[3])];\n    } else {\n        let r = pixel[0] + (rndmInt(max) * rndmSign())\n        let g = pixel[1] + (rndmInt(max) * rndmSign())\n        let b = pixel[2] + (rndmInt(max) * rndmSign())\n\n        return [Math.floor(r),Math.floor(g),Math.floor(b),Math.floor(pixel[3])];\n    }\n    let r = pixel[0] + rndmInt(max)\n}\n\nexport function saturation(pixel,{amount=3}){\n\n    let r = pixel[0]\n    let g = pixel[1]\n    let b = pixel[2]\n    let grayVal = (r+g+b)/3\n\n    let blendR = lerp(grayVal,r,amount)\n    let blendG = lerp(grayVal,g,amount)\n    let blendB = lerp(grayVal,b,amount)\n\n    return [Math.floor(blendR),Math.floor(blendG),Math.floor(blendB),Math.floor(pixel[3])];\n}\n\n\n","\nimport { xyToIndex, fillPixelRect, rndmInt, fillDisplacementGaps, dist } from \"./utils\";\n\nimport { mainImage } from \"./App\";\n\n\n\nexport function pixelate(imageData,{pixelWidth=12,pixelsPerRow}){\n\n    let data = imageData.data\n\n    let newImageData = new ImageData(imageData.width,imageData.height);\n    let nData = newImageData.data;\n    \n    let widthPerPixel = 8\n\n    if(pixelWidth){\n        widthPerPixel = pixelWidth\n    } else if (pixelsPerRow){\n        widthPerPixel = Math.floor(imageData.width/pixelsPerRow)\n    }\n\n    widthPerPixel = Math.floor(widthPerPixel * mainImage.drawResFactor)\n\n    // two for loops get position of every big pixel\n    for(var y=0;y<imageData.height;y+=widthPerPixel){\n        for(var x=0;x<imageData.width;x+=widthPerPixel){\n\n            let index = xyToIndex(x,y,imageData.width);\n            let bigPixelValues = [data[index],data[index+1],data[index+2],data[index+3]];\n            \n            fillPixelRect(newImageData,x,y,widthPerPixel,widthPerPixel,[...bigPixelValues])\n        }\n    }\n    \n    console.log(document.event)\n\n    return newImageData\n\n}\n\nexport function bitmap(imageData,{canvas,blockScaleFactor=2,randomPattern=false}){\n    let data = imageData.data;\n\n    let newImageData = new ImageData(imageData.width,imageData.height);\n    let nData = newImageData.data;\n\n\n    let pattern = [\n        0,8,2,10,\n        12,4,14,6,\n        13,11,1,9,\n        15,7,13,5\n    ]\n\n    blockScaleFactor = Math.floor(blockScaleFactor * mainImage.drawResFactor);\n\n    if(blockScaleFactor < 1){\n        blockScaleFactor = 1;\n    }\n\n    let patternW = Math.sqrt(pattern.length);\n\n\n    for(var y=0;y<imageData.height;y+=patternW*blockScaleFactor){\n        for(var x=0;x<imageData.width;x+=patternW*blockScaleFactor){\n\n            if(randomPattern){\n                pattern = []\n                let nums = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];\n                let len = nums.length;\n                for(var i=0;i<len;i++){\n                    let index = rndmInt(nums.length);\n                    pattern.push(nums[index]);\n                    nums.splice(index,1)\n                }\n            } \n\n\n            let index = xyToIndex(x,y,imageData.width);\n\n            let r = data[index];\n            let g = data[index+1];\n            let b = data[index+2];\n            let a = data[index+3];\n\n            let brightness = (r+g+b)/3\n\n            let mappedBrightness = Math.floor((brightness/255)*pattern.length);\n\n            let patternIndex = 0;\n\n            // if(y==0 && x<=20){\n            //     console.log('..........')\n            //     console.log(x,y)\n            //     console.log('brightness:', brightness)\n            //     console.log('mappedBrightness:', mappedBrightness)\n            // }\n            for(var y2=0; y2<(patternW*blockScaleFactor); y2+=blockScaleFactor){\n                for(var x2=0; x2<(patternW*blockScaleFactor); x2+=blockScaleFactor){\n\n                    if(pattern[patternIndex] < mappedBrightness){\n                        fillPixelRect(newImageData, x+x2, y+y2, blockScaleFactor, blockScaleFactor, [255,255,255,a])\n                    } else {\n                        fillPixelRect(newImageData, x+x2, y+y2, blockScaleFactor, blockScaleFactor, [0,0,0,a])\n\n                    }\n\n\n                    patternIndex++;\n                }\n            }\n\n        }\n\n    }\n\n\n\n    console.log('%cBITMAP COMPLETE','color:rgb(0,255,0)')\n\n    return newImageData;\n\n\n}\n\n\nexport function voronoi(imageData, {numOfPoints=120}){\n\n    let w = imageData.width;\n    let h = imageData.height;\n\n    let data = imageData.data;\n\n    let newImageData = new ImageData(imageData.width,imageData.height);\n    let nData = newImageData.data;\n\n    let grid = [];\n\n    let squaresPerSide = 10;\n\n    let squareW = Math.floor(w/squaresPerSide)\n    let squareH = Math.floor(h/squaresPerSide)\n\n    for(var i=0;i<squaresPerSide;i++){\n\n        let row = []\n\n        for(var j=0;j<squaresPerSide;j++){\n            row.push([])\n        }\n\n        grid.push(row)\n    }\n\n    console.log(grid)\n    \n\n    let points = [];\n\n\n\n    //generate points\n    for(var i=0;i<numOfPoints;i++){\n        let x = rndmInt(w);\n        let y = rndmInt(h);\n\n        let index = xyToIndex(x,y,w);\n        let color = {r:data[index],g:data[index+1],b:data[index+2],a:data[index+3]};\n\n        let gridX = Math.floor(x/squareW);\n        let gridY = Math.floor(y/squareH);\n\n        grid[gridX][gridY].push({x:x, y:y, r:color.r, g:color.g, b:color.b, a:color.a})\n\n        // points.push({x:x, y:y, r:color.r, g:color.g, b:color.b, a:color.a});\n    }\n\n    console.log(grid)\n\n    console.log(points)\n\n    for(var y=0;y<h;y++){\n        for(var x=0;x<w;x++){\n            let index = xyToIndex(x,y,w);\n\n            let closestDistYet = 2000;\n            let closestColor = [255,0,0,255];\n\n            let surroundingPoints = [];\n\n            let xOnGrid = Math.floor(x/squareW);\n            let yOnGrid = Math.floor(y/squareH);\n\n            \n            if(grid[xOnGrid][yOnGrid]){\n                console.log(grid[xOnGrid][yOnGrid])\n                surroundingPoints.push(...grid[xOnGrid][yOnGrid]);\n            }\n\n            if(x==20 && y==20){\n                console.log(surroundingPoints)\n            }\n\n            points.forEach(point => {\n                let distance = dist(x,y,point.x,point.y);\n                if(distance < closestDistYet){\n                    closestDistYet = distance;\n                    closestColor = [point.r,point.g,point.b,point.a];\n                }\n            })\n\n            nData[index] = closestColor[0];\n            nData[index+1] = closestColor[1];\n            nData[index+2] = closestColor[2];\n            nData[index+3] = closestColor[3];\n        }\n    }\n\n\n    return newImageData;\n    \n}","import { xyToIndex, fillDisplacementGaps } from \"./utils\";\n\nimport { mainImage } from \"./App\";\n\n\nexport function wave(imageData,{canvas,xAmplitude=20,xWavelength=120,xShift=0,yAmplitude=20,yWavelength=60,yShift=0,warp=true}){\n\n\n    // if warp is false then it distorys\n    let data = imageData.data\n\n    let newImageData = new ImageData(imageData.width,imageData.height);\n    let nData = newImageData.data;\n\n    xAmplitude = Math.floor( mainImage.drawResFactor * xAmplitude );\n    xWavelength = Math.floor( mainImage.drawResFactor * xWavelength );\n    xShift = Math.floor( mainImage.drawResFactor * xShift );\n    \n    yAmplitude = Math.floor( mainImage.drawResFactor * yAmplitude );\n    yWavelength = Math.floor( mainImage.drawResFactor * yWavelength );\n    yShift = Math.floor( mainImage.drawResFactor * yShift );\n\n\n    for(var y=0;y<imageData.height;y++){\n        for(var x=0;x<imageData.width;x++){\n            let i1 = xyToIndex(x,y,imageData.width);\n\n            let r = data[i1];\n            let g = data[i1+1];\n            let b = data[i1+2];\n            let a = data[i1+3];\n\n            let x2, y2;\n\n            if(!warp) {\n                x2 = (x + (Math.sin(y/yWavelength)*yAmplitude))+yShift;\n                y2 = (y + (Math.sin(x/xWavelength)*xAmplitude))+xShift;\n            } else {\n                x2 = (x + (Math.sin(x/xWavelength)*xAmplitude))+xShift;\n                y2 = (y + (Math.sin(y/yWavelength)*yAmplitude))+yShift;\n            }\n\n            x2 = Math.floor(x2)\n            y2 = Math.floor(y2)\n\n            if(x2 > imageData.width){\n                x2 -= imageData.width\n            } else  if (x2 < 0){\n                x2 += imageData.width\n            }\n\n            if(y2 > imageData.height){\n                y2 -= imageData.height\n            } else if (y2 < 0){\n                y2 += imageData.height\n            }\n\n            let i2 = xyToIndex(x2,y2,imageData.width);\n \n            nData[i2] = r\n            nData[i2+1] = g\n            nData[i2+2] = b\n            nData[i2+3] = a\n\n            if(x==20 && y==20){\n                console.log(i1)\n                console.log(x,y)\n                console.log(x2,y2)\n                console.log(i2)\n            }\n            \n        }\n    }\n\n    \n    newImageData = fillDisplacementGaps(newImageData)\n    newImageData = fillDisplacementGaps(newImageData)\n\n\n    console.log(newImageData)\n    return newImageData\n}\n\n\n// export function RGBOffset(imageData,{}){\n\n// }","\nimport { act } from \"@testing-library/react\";\nimport { invert } from \"./pixelFilters\";\nimport * as pixelFilters from './pixelFilters';\nimport * as blockFilters from './blockFilters';\nimport * as displacementFilters from './displacementFilters';\n\nimport * as cnsl from './consoleUtils'\n\nexport class Image {\n    constructor(){\n        this.canvas = null;\n        this.w = 400;\n        this.h = 400;\n        this.image = null;\n        this.activeFilters = [];\n        this.filtersCompiled = [];\n        this.renderWorkers = [];\n        this.drawCountdown = 500;\n        this.drawInterval = null;\n        this.drawResFactor = 0.5;\n\n\n    }\n\n    init(canvas){\n\n        console.log('%cV 1.2','background-color:#ff00ff;padding:24px 48px 24px 48px;color:black')\n\n        this.canvas = canvas\n        console.log('%c Initializing Image Object','background-color:orange;color:black')\n        console.log('%c                             ','background-color: orange;color:black;width:200px;white-space:prewrap;')\n        console.log(this);\n        console.log('%c                             ','background-color: orange;color:black;width:200px;white-space:prewrap')\n\n        this.ctx = this.canvas.getContext('2d');\n\n        this.setCanvas();\n\n        let numOfWorkers = 4;\n        this.renderWorkers = [];\n\n        // this.addFilter(new ByPixelFilter(pixelFilters.invert,{}));\n        // this.addFilter(new ByPixelFilter(pixelFilters.exposure,{value:30}));\n        // this.addFilter(new ByPixelFilter(pixelFilters.threshold,{cutoff:200}));\n        // this.addFilter(new ByPixelFilter(pixelFilters.gradientMap,{lightColor:[255,0,0],darkColor:[0,0,50]}));\n        // this.addFilter(new ByPixelFilter(pixelFilters.saturation,{amount:10}));\n        // this.addFilter(new ByPixelFilter(pixelFilters.noise,{max:100,monochromatic:false}));\n\n        // this.addFilter(new ByBlockFilter(displacementFilters.wave,{canvas:this.canvas,xAmplitude:200,xWavelength:120,yAmplitude:12,yWavelength:200}));\n        // this.addFilter(new ByBlockFilter(blockFilters.voronoi,{numOfPoints:124}));\n        // this.addFilter(new ByBlockFilter(blockFilters.bitmap,{canvas:this.canvas,blockScaleFactor:4}))\n        // this.addFilter(new ByPixelFilter(pixelFilters.gradientMap,{darkColor:[0,0,100],lightColor:[255,240,255]}))\n\n        console.log('%cTHIS.IMAGE --------------','color:orange');\n        console.log(this.image);\n        console.log('%c ------------------------','color:orange')\n\n        this.compileFilters()\n\n        if(this.image){\n            this.draw()\n        }\n    }\n\n    // startDrawCountdown(){\n    //     this.drawInterval = setInterval(() => {\n    //         this.drawCountdown -= 10;\n\n    //         if(this.drawCountdown < )\n    //     },10)\n    // }\n\n    clearFilters(){\n        this.filters = [];\n    }\n\n    addFilter(activeFilter){\n        console.log('ADDING FILTER')\n        this.activeFilters.push(activeFilter);\n        this.compileFilters()\n    }\n    \n    removeFilter(filterIndex){\n        this.activeFilters.splice(filterIndex,1);\n        this.compileFilters();\n    }\n\n    compileFilters(){\n        this.filtersCompiled = [];\n\n        \n        // goes through every active filter\n            // if filter is byPixel it batches them together because they can be run in sequence for each pixel (don't need to loop through for every byPixelFilter)\n            // if filter is byBlock it pushes array of the previously batched pixel filters in filtersCompiled and then pushes itself into filtersCompiled\n        let byPixelFilterBatch = [];\n        \n        this.activeFilters.forEach(filter => {\n            console.log(filter)\n            let type = filter.type;\n\n            if(!filter.active){\n                return;\n            }\n\n            if(type == \"ByPixelFilter\"){\n                byPixelFilterBatch.push(filter)\n            } else if (type == \"ByBlockFilter\"){\n                if(byPixelFilterBatch.length > 0){\n                    this.filtersCompiled.push(byPixelFilterBatch);\n                    byPixelFilterBatch = [];\n                }\n\n                this.filtersCompiled.push(filter)\n            }\n        })\n\n        if(byPixelFilterBatch.length > 0){\n            this.filtersCompiled.push(byPixelFilterBatch);\n            byPixelFilterBatch = []\n        }\n        \n    }\n\n\n    setImage(img){\n        console.log('%c Image Set','color:orange')\n        this.image = img;\n\n        this.canvas.style.width = '50vw';\n\n        let imgStyles = getComputedStyle(this.image);\n\n        let w = imgStyles.width;\n        let h = imgStyles.height;\n\n        let totalPixels = w*h;\n\n\n        this.setCanvas();\n        this.draw();\n    }\n\n    setCanvas(){\n\n        if(this.image){\n\n            this.w = this.image.width*this.drawResFactor;\n            this.h = this.image.height*this.drawResFactor;\n\n            this.canvas.width = this.w;\n            this.canvas.height = this.h;\n\n        } else {\n            this.canvas.width = this.w;\n            this.canvas.height = this.h;\n\n        }\n    \n        // this.canvas.style.width = \"50vw\"\n\n    }\n\n    drawDefault(){\n        this.ctx.fillStyle = 'rgb(170,170,170)';\n        this.ctx.beginPath();\n        this.ctx.fillRect(0,0,this.w,this.h);\n        this.ctx.closePath()\n    }\n\n    draw(finalRender){\n\n        // console.log(this.w,this.h)\n\n        if(!this.image){\n            return\n        }\n\n        this.compileFilters()\n\n        let performanceStart = performance.now()\n        console.log('%c DRAWIMG IMAGE','color:orange;')\n        this.ctx.beginPath();\n        this.ctx.fillStyle = `rgb(${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)})`\n        this.ctx.fillRect(0,0,this.image.width,this.image.height);\n        this.ctx.closePath();\n\n        this.ctx.drawImage(this.image,0,0,this.w,this.h);\n\n\n\n        if(this.filtersCompiled.length > 0){\n            console.log('COMPILED FILTERS FOUND')\n            let filteredData = this.applyFilters();\n            // console.log(filteredData)\n            this.ctx.putImageData(filteredData,0,0)\n        } else {\n            console.log('NO COMPILED FILTERS FOUND')\n        }\n\n        let performanceStop = performance.now();\n        console.log(`%cIMAGE DRAWN WITH ${this.activeFilters.length} FILTERS \\n IN ${(performanceStop-performanceStart)/1000} SECONDS`,'background-color:yellow;color:black;padding:3px')\n    }\n\n    applyFilters(){\n        // let data = imageData.data;\n        console.log('%cAPPLYING FILTERS','background-color:#00ff00')\n        let imageData = this.ctx.getImageData(0,0,this.w,this.h)\n\n        //previous val will be the imageData provided as a reduce argument in first iteration, after that it will be image data returned from previous interation\n            // reducer function will always return the imageData\n        //current val will be the current grouping\n        \n        const reducerFunction = (previousVal,currentVal) => {\n\n            console.log('%cREDUCER FUNCTION REDUCING','color:#00ff00');\n\n            let newImageData = previousVal;\n            let newData = newImageData.data;\n\n            if(currentVal instanceof Array){\n                for(var i=0;i<newData.length;i+=4){\n                    let pixel = [newData[i],newData[i+1],newData[i+2],newData[i+3]];\n\n                    currentVal.forEach(filter => {\n                        pixel = filter.operation(pixel,filter.options)\n                    })\n\n\n                    newData[i] = pixel[0]\n                    newData[i+1] = pixel[1]\n                    newData[i+2] = pixel[2]\n                    newData[i+3] = pixel[3]\n                    \n                }\n\n                return newImageData;\n\n            } else {\n\n                let blockFilteredData = currentVal.operation(newImageData,currentVal.options)\n\n                return blockFilteredData\n            }\n\n        }\n\n\n\n        return this.filtersCompiled.reduce(reducerFunction,imageData)\n\n\n    }\n\n    exportImage(filename,scale,format,jpegQuality){\n        console.log('%cEXPORTING IMAGE','background-color:orange;color:black');\n\n        let prevResFacSave = this.drawResFactor;\n\n        this.drawResFactor = scale/100;\n        this.setCanvas()\n        // console.log(this.drawResFactor)\n        this.draw()\n\n        this.renderToImg(filename,format,jpegQuality);\n\n        this.drawResFactor = prevResFacSave;\n        this.setCanvas();\n        this.draw();\n    }\n\n    renderToImg(filename,format,jpegQuality){\n\n\n        let prevImg = document.querySelector('#draw-output')\n        if(prevImg){\n            prevImg.remove();\n        }\n\n        let imageElem = document.createElement('img');\n        imageElem.id = \"draw-output\";\n        imageElem.style.display = 'none';\n        \n        let blob;\n\n        function blobCallback(blob){\n            let a = document.createElement('a');\n            a.style.display = 'none';\n\n            let url = window.URL.createObjectURL(blob);\n            a.href = url;\n            a.download = filename\n            a.click();\n        }\n\n        if(format == 'jpeg'){\n            this.canvas.toBlob(blobCallback,'image/jpeg',jpegQuality);\n        } else {\n            this.canvas.toBlob(blobCallback,'image/png');\n        }\n\n    \n        // let url = window.URL.createObjectURL(blob);\n        // console.log(url)\n\n        // imageElem.src = blob;\n\n        // document.querySelector('.App').appendChild(imageElem)\n\n        // console.log(imageElem)\n    }\n\n\n}\n\nexport const sizeCanv = (img,canv) => {\n    canv.width = img.width;\n    canv.height = img.height;\n\n    if(img.width >= img.height){\n        canv.style.width = \"60vw\"\n        canv.style.height = \"auto\"\n    } else {\n        canv.style.height = \"60vw\"\n        canv.style.width = \"auto\"\n\n    }\n}\n\n \n\n\nexport class ByPixelFilter{\n    constructor(operation,name,options){\n        this.operation = operation;\n        this.name = name;\n        this.options = options;\n        this.active = true;\n        this.type = \"ByPixelFilter\";\n    }\n}\n\nexport class ByBlockFilter{\n    constructor(operation,name,options){\n        this.operation = operation;\n        this.name = name;\n        this.options = options;\n        this.active = true;\n        this.type = \"ByBlockFilter\";\n    }\n\n}","import React from \"react\";\n\n\nconst FilterOption = ({handler,title,filter,name,defaultOptions}) => {\n\n    return (\n        <p data-filter={name} data-options={defaultOptions} className=\"Filter-Option\" onMouseDown={handler}>{title}</p>\n    )\n}\n\nexport default FilterOption","import React, {useState, useEffect} from \"react\";\n\n\nimport { ByBlockFilter, ByPixelFilter } from \"../ImageFunctions\";\nimport { invert, exposure, saturation, gradientMap, noise, threshold } from '../pixelFilters';\nimport { pixelate, bitmap } from \"../blockFilters\";\nimport { wave } from \"../displacementFilters\";\n\nimport { mainImage } from \"../App\";\n\nimport FilterOption from \"./FilterOption\";\n\nconst AddFilter = ({refreshApp}) => {\n\n    const [expanded,setExpanded] = useState(false);\n    const [width,setWidth] = useState('100%');\n    const [height,setHeight] = useState(0);\n    const [padding,setPadding] = useState(0);\n\n    const handleExpand = () => {\n        if(expanded){\n            setWidth('100%')\n            setHeight(0)\n            setPadding(0)\n            document.querySelector('.AF-Button').textContent = \"Filters +\"\n            setExpanded(false)\n        } else {\n            setWidth('100%');\n            setHeight('auto');\n            setPadding(24);\n            document.querySelector('.AF-Button').textContent = \"Filters -\"\n            // setTop('0px');\n            // setLeft('0px')\n            setExpanded(true);\n        }\n    }\n\n    const handleFilterOption = (e) => {\n        console.log(e.target.dataset.filter)\n        handleExpand()\n\n        let allFilters = [invert,exposure,saturation,gradientMap,noise,threshold,pixelate,bitmap,wave];\n        let filterNames = [\"invert\",\"exposure\",\"saturation\",\"gradientMap\",\"noise\",\"threshold\",\"pixelate\",\"bitmap\",\"wave\"];\n\n        console.log(e.target.dataset)\n        let defaultOptions = JSON.parse(e.target.dataset.options)\n        allFilters.forEach((filter,index) => {\n            // console.log(filterNames[index])\n            // console.log(e.target.dataset.filter)\n            if(e.target.dataset.filter == filterNames[index]){\n                let tc = e.target.textContent.toLowerCase()\n                console.log('FILTER MATCHED = ' + filterNames[index]);\n                if(tc == 'bitmap' || tc == 'pixelate' || tc=='wave'){\n                    mainImage.addFilter(new ByBlockFilter(filter,filterNames[index],{...defaultOptions}))\n                } else {\n                    mainImage.addFilter(new ByPixelFilter(filter,filterNames[index],{...defaultOptions}))\n\n                }\n                console.log(mainImage.activeFilters)\n            }\n        })\n\n        refreshApp()\n\n \n    }\n\n    \n    // let borderRadius;\n    \n    // useEffect(() => {\n    //     console.log(document.querySelector('.Add-Filter-Button'))\n    //     borderRadius = getComputedStyle(document.querySelector('.AF-Button')).borderRadius;\n    //     console.log(borderRadius)\n    // })\n\n    return (\n        <div className=\"Add-Filter Menu-Bar-Cont\">\n            <div className=\"Add-Filter-Button\">\n                <button className=\"AF-Button Menu-Bar-Button\" onMouseDown={handleExpand}>Filters +</button>\n            </div>\n            <div style={{width:width,height:height,paddingBottom:padding,paddingTop:padding*2}} className=\"Add-Filter-Options\">\n                <FilterOption handler={handleFilterOption} filter={bitmap} name=\"bitmap\" title={'Bitmap'} defaultOptions={JSON.stringify({blockScaleFactor:4,randomPattern:false})} />\n                <FilterOption handler={handleFilterOption} filter={exposure} name=\"exposure\" title={'Exposure'} defaultOptions={JSON.stringify({value:40})}/>\n                <FilterOption handler={handleFilterOption} filter={gradientMap} name=\"gradientMap\" title={'Gradient Map'} defaultOptions={JSON.stringify({darkColor:[0,0,255],lightColor:[255,255,255]})}/>\n                <FilterOption handler={handleFilterOption} filter={invert} name=\"invert\" title={'Invert'} defaultOptions={JSON.stringify({filler:1})}/>\n                <FilterOption handler={handleFilterOption} filter={noise} name=\"noise\" title={'Noise'} defaultOptions={JSON.stringify({max:100,monochromatic:true})}/>\n                <FilterOption handler={handleFilterOption} filter={pixelate} name=\"pixelate\" title={'Pixelate'} defaultOptions={JSON.stringify({pixelWidth:12})}/>\n                <FilterOption handler={handleFilterOption} filter={saturation} name=\"saturation\" title={'Saturation'} defaultOptions={JSON.stringify({amount:3})}/>\n                <FilterOption handler={handleFilterOption} filter={threshold} name=\"threshold\" title={'Threshold'} defaultOptions={JSON.stringify({cutoff:120})}/>\n                <FilterOption handler={handleFilterOption} filter={wave} name=\"wave\" title={'Wave'} defaultOptions={JSON.stringify({xAmplitude:20,xWavelength:120,xShift:0,yAmplitude:20,yWavelength:60,yShift:0,warp:false})}/>\n            </div>\n        </div>\n    )\n};\n\nexport default AddFilter\n\n","import React, {useState} from 'react';\n\nimport { mainImage } from '../App';\n\nconst PreviewRes = ({refreshApp}) => {\n\n    const [ previewRes,setPreviewRes ] = useState(mainImage.drawResFactor);\n\n    const [ optionsExpanded, setOptionsExpanded ] = useState(false);\n\n    const handleExpandButton = (e) => {\n        setOptionsExpanded(!optionsExpanded);\n    }\n\n    const handleResButton = (e) => {\n        let buttonVal = e.target.dataset.val;\n        setPreviewRes(parseFloat(buttonVal));\n        setOptionsExpanded(false);\n\n        mainImage.drawResFactor = buttonVal;\n        refreshApp();\n    }\n\n    return (\n        <div className=\"Preview-Res Menu-Bar-Cont\">\n            <div className=\"Res-Button-Cont\">\n                <button className=\"Menu-Bar-Button\" onMouseDown={handleExpandButton}>Preview Resolution: {previewRes}x\n                    {/* <span>{previewRes}x</span> */}\n                </button>\n            </div>\n            <div className={`Res-Options-Cont ${optionsExpanded ? \"Res-Options-Expanded-True\" : \"Res-Options-Expanded-False\"}`}>\n                <button onMouseDown={handleResButton} data-val=\"1\" >1x</button>\n                <button onMouseDown={handleResButton} data-val=\"0.5\" >0.5x</button>\n                <button onMouseDown={handleResButton} data-val=\"0.25\" >0.25x</button>\n                <button onMouseDown={handleResButton} data-val=\"0.1\" >0.1x</button>\n                {/* <button data-val=\"1\" >1x</button> */}\n            </div>\n            {/* <input type=\"\" */}\n        </div>\n    )\n}\n\nexport default PreviewRes","import React, {useState} from 'react';\n\nimport { mainImage } from '../App';\n\nconst ExportButton = ({setDisplay}) => {\n\n    const handleMouseDown = () => {\n\n        if(mainImage.image){\n            setDisplay('flex')\n        } else {\n            alert('An image must be uploaded to export.')\n        }\n    }\n\n    return (\n        <div className=\"Export-Cont Menu-Bar-Cont\">\n            <button class=\"Menu-Bar-Button\" onMouseDown={handleMouseDown}>Export</button>\n        </div>\n    )\n}\n\nexport default ExportButton;","import React from 'react';\n\nconst InfoButton = ({handler}) => {\n\n    const handleClick = () => {\n        handler('flex');\n    }\n\n    return (\n        <div className=\"Info-Button\">\n            <button onMouseDown={handleClick}>?</button>\n        </div>\n    )\n}\n\nexport default InfoButton;","import React from \"react\";\nimport { easeOut, lerp } from \"../utils\";\nimport Canvas from \"./Canvas\";\n\nimport FileUpload from \"./FileUpload\";\nimport SaveAndLoad from \"./SaveAndLoad\"\n\nimport AddFilter from \"./AddFilter\";\nimport PreviewRes from \"./PreviewRes\";\nimport ExportButton from \"./ExportButton\";\n\nimport InfoButton from \"./InfoButton\";\n\n\n\nconst ImageDisplay = ({refreshApp, setExportDisplay, setInfoDisplay}) => {\n\n\n    const handleZoom = (e) => {\n\n        if(e.target.id == 'zoomIn'){\n            zoom(1.5,500);\n        } else {\n            zoom(0.66,500);\n        }\n    }\n\n    const zoom = (amount,duration) => {\n\n                \n        let canvas = document.querySelector('.imageCanv');\n        let canvasWidth = getComputedStyle(canvas).width;\n        let w = parseInt(canvasWidth.split('px')[0]);\n\n        let targetW = w * amount;\n\n        canvas.style.width = targetW + \"px\";\n                \n\n    }\n\n\n\n    return (\n        <div className=\"Image-Display\">\n            <div className=\"Menu-Bar\">\n                {/* <SaveAndLoad /> */}\n                <ExportButton setDisplay={setExportDisplay}/>\n                <AddFilter refreshApp={refreshApp} />\n                <PreviewRes refreshApp={refreshApp}/>\n            </div>\n            <div className=\"Image-Cont flex-center\">\n                <Canvas />\n            </div>\n            <div className=\"Zoom-Cont\">\n                <button id=\"zoomIn\" onMouseDown={handleZoom}>+</button>\n                <button id=\"zoomOut\" onMouseDown={handleZoom}>-</button>\n            </div>\n            <InfoButton handler={setInfoDisplay} />\n\n        </div>\n    )\n}\n\nexport default ImageDisplay","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nconst InvertCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Invert-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>\n                </div>\n                <h3>Invert</h3>\n            </span>\n        </div>\n    )\n}\n\nexport default InvertCard","import React, {useEffect, useRef, useState} from \"react\";\n\nconst Slider = ({handler,max,min,step,value,title}) => {\n\n    const [displayVal, setDisplayVal] = useState(value)\n\n\n\n    const sliderChange = (e) => {\n        setDisplayVal(e.target.value);\n    }\n\n\n\n    return (\n        <div className=\"Slider\">\n            <div>\n                <input defaultValue={displayVal} onMouseUp={handler} onChange={sliderChange} max={max} min={min} step={step} type=\"range\"></input>\n                <p className=\"Slider-Value-Display\">{displayVal}</p>\n            </div>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default Slider;","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\n\nconst SaturationCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n\n    const handleSliderChange = (e) => {\n        filter.options.amount = e.target.value;\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Saturate</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={10} min={0} step={1} value={2} />\n        </div>\n    )\n}\n\nexport default SaturationCard;","import React, {useState} from \"react\";\n\nimport Slider from \"../Slider\";\n\nimport { mainImage } from \"../../App\";\n\nconst NoiseCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active);\n    const [monochr,setMonochr] = useState(filter.options.monochromatic=true);\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n    const handleMonoCheck = (e) => {\n        console.log(e.target.checked)\n        setMonochr(e.target.checked)\n        filter.options.monochromatic = !monochr;\n\n        console.log('%cMONOCHROMATIC STATUS','color:red');\n        console.log('monochr state: ');\n        console.log(monochr);\n        console.log('filter.options.monochromatic:');\n        console.log(filter.options.monochromatic)\n\n        mainImage.draw()\n    }\n\n    const handleSliderChange = (e) => {\n        filter.options.max = e.target.value;\n\n        console.log('%cMONOCHROMATIC STATUS','color:red');\n        console.log('monochr state: ');\n        console.log(monochr);\n        console.log('filter.options.monochromatic:');\n        console.log(filter.options.monochromatic)\n\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Noise-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Noise</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={255} min={0} step={1} value={50} title={\"Amount\"}/>\n            <div className=\"Checkbox-Cont\">\n                <input type=\"checkbox\" onChange={handleMonoCheck} checked={monochr}/>\n                <p>Monochromatic Noise</p>\n            </div>\n        </div>\n    )\n}\n\nexport default NoiseCard","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\n\nconst ExposureCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n\n    const handleSliderChange = (e) => {\n        filter.options.value = parseInt(e.target.value);\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>\n                </div>\n                <h3>Exposure</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={255} min={-255} step={1} value={filter.options.value} title={\"Value\"} />\n        </div>\n    )\n}\n\nexport default ExposureCard;","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\n\nconst ThresholdCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n\n\n    const handleSliderChange = (e) => {\n        filter.options.cutoff = parseInt(e.target.value);\n        mainImage.draw()\n    }\n    \n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Threshold</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={255} min={0} step={1} value={filter.options.cutoff} title={\"Cutoff Value\"} />\n        </div>\n    )\n}\n\nexport default ThresholdCard;","import React, {useState} from \"react\";\nimport { mainImage } from \"../App\";\n\n\n// -------------\n// Countdown that waits 500 miliseconds since \nlet timeRemaining = 250;\n\nlet countdown = null;\n\nfunction startCountdown(){\n    \n    if(countdown){\n        return;\n    }\n    \n    countdown = setInterval(() => {\n        timeRemaining -= 10;\n        \n        if(timeRemaining < 0){\n            clearInterval(countdown);\n            console.log('!!!!!!!! HEY !!!!!!!!!')\n            timeRemaining = 250;\n            countdown = null;\n            \n            mainImage.draw();\n        }\n        \n    },10)\n}\n// -------------\n\n\nconst ColorInput = ({title,value,handler}) => {\n\n    const [colorVal, setColorVal] = useState(value);\n\n    const colorChange = (e) => {\n\n        timeRemaining = 250;\n\n        \n        startCountdown();\n        handler(colorVal)\n        \n        setColorVal(e.target.value);\n    }\n\n    return (\n        <div className=\"Color-Input\">\n            <input value={colorVal} onChange={colorChange} type=\"color\" />\n        </div>\n    )\n}\n\nexport default ColorInput","import React, {useState} from \"react\";\n\nimport ColorInput from \"../ColorInput\";\n\nimport { rgbToHex, hexToRgb } from \"../../utils\";\nimport { mainImage } from \"../../App\";\n\nconst GradientMapCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const [darkVal,setDarkVal] = useState(rgbToHex(filter.options.darkColor))\n    const [lightVal,setLightVal] = useState(rgbToHex(filter.options.lightColor))\n\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n    const handleDarkColorInput = (value) => {\n        setDarkVal(value);\n\n        filter.options.darkColor = hexToRgb(darkVal)\n\n        // mainImage.draw()\n    }\n    \n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Invert-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Gradient Map</h3>\n            </span>\n            <br/>\n            <ColorInput title={\"Dark Color\"} value={darkVal} handler={handleDarkColorInput}/>\n            {/* <ColorInput title={\"Light Color\"} value={rgbToHex(filter.options.lightColor)} handler/> */}\n        </div>\n    )\n}\n\nexport default GradientMapCard","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\n\nconst BitmapCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active);\n\n    const [randomBitmap,setRandomBitmap] = useState(filter.options.randomPattern)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n    const handleRandomCheck = (e) => {\n        filter.options.randomPattern = e.target.checked;\n        mainImage.draw()\n    }\n\n\n\n    const handleSliderChange = (e) => {\n        filter.options.blockScaleFactor = parseInt(e.target.value);\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>\n            </div>\n            <span>\n                <h3>Bitmap</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={24} min={1} step={1} value={filter.options.blockScaleFactor} title={'Scaling Factor'} />\n            <div className=\"Checkbox-Cont\">\n                <input type=\"checkbox\" onChange={handleRandomCheck} defaultChecked={randomBitmap}/>\n                <p>Random Noise Pattern</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default BitmapCard;","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\n\nconst PixelateCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n\n\n    const handleSliderChange = (e) => {\n        filter.options.pixelWidth = parseInt(e.target.value);\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Pixelate</h3>\n            </span>\n            <Slider handler={handleSliderChange} max={255} min={2} step={1} value={filter.options.pixelWidth} title={\"Pixel Width\"} />\n        </div>\n    )\n}\n\nexport default PixelateCard;","import React from \"react\";\n\nconst Checkbox = ({handler,title,defaultValue}) => {\n    return (\n        <div className=\"Checkbox-Cont\">\n            <input type=\"checkbox\" defaultChecked={defaultValue} onChange={handler}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default Checkbox;","import React, {useState} from \"react\";\n\n\nimport { mainImage } from \"../../App\";\n\nimport Slider from \"../Slider\";\nimport Checkbox from \"../Checkbox\";\n\nconst WaveCard = ({filter,filterIndex,refreshApp}) => {\n\n    const [filterActive,setFilterActive] = useState(filter.active);\n    const [warpActive,setWarpActive] = useState(filter.options.warp)\n\n    const handleDisplayCheck = (e) => {\n        if(e.target.checked){\n            filter.active = true;\n        } else {\n            filter.active = false; \n        }\n        \n        mainImage.draw()\n    }\n\n    const handleWarpDistortCheck = (e) => {\n        filter.options.warp = e.target.checked;\n        setWarpActive(e.target.checked)\n        mainImage.draw()\n    }\n\n    const handleXAmpChange = (e) => {\n        filter.options.xAmplitude = e.target.value;\n        mainImage.draw()\n    }\n    const handleXWaveChange = (e) => {\n        filter.options.xWavelength = e.target.value;\n        mainImage.draw()\n    }\n    const handleYAmpChange = (e) => {\n        filter.options.yAmplitude = e.target.value;\n        mainImage.draw()\n    }\n    const handleYWaveChange = (e) => {\n        filter.options.yWavelength = e.target.value;\n        mainImage.draw()\n    }\n\n    const handleXOut = (e) => {\n        mainImage.activeFilters.splice(filterIndex,1);\n        mainImage.compileFilters();\n\n        refreshApp()\n    }\n\n    return (\n        <div className=\"Filter-Card Saturation-Filter-Card\">\n            <button onMouseDown={handleXOut} className=\"x-out\">x</button>\n            <span>\n                <div className=\"Display-Check-Cont\">\n                    <input onChange={handleDisplayCheck} type=\"checkbox\" defaultChecked={filterActive}/>                </div>\n                <h3>Wave</h3>\n            </span>\n            {/* <input type=\"checkbox\" defaultChecked={filter.options.warp}/> */}\n            <Checkbox handler={handleWarpDistortCheck} title=\"Warp\" defaultValue={warpActive}/>\n            <Slider handler={handleXAmpChange} max={warpActive ? 100 : 1250} min={1} step={1} value={40} title={\"X-Amplitude\"}/>\n            <Slider handler={handleXWaveChange} max={1250} min={1} step={1} value={40} title={\"X-Wavelength\"}/>\n            <Slider handler={handleYAmpChange} max={warpActive ? 100 : 1250} min={1} step={1} value={40} title={\"Y-Amplitude\"}/>\n            <Slider handler={handleYWaveChange} max={1250} min={1} step={1} value={40} title={\"Y-Wavelength\"}/>\n        </div>\n    )\n}\n\nexport default WaveCard;","import React from \"react\";\n\nimport { invert, noise, saturation, exposure, threshold, gradientMap } from \"../pixelFilters\";\nimport { bitmap, pixelate } from \"../blockFilters\";\n\nimport InvertCard from \"./filter-cards/InvertCard\";\nimport SaturationCard from \"./filter-cards/SaturateCard\";\n\nimport { mainImage } from \"../App\";\nimport { ByPixelFilter, ByBlockFilter } from \"../ImageFunctions\";\nimport NoiseCard from \"./filter-cards/NoiseCard\";\nimport ExposureCard from \"./filter-cards/ExposureCard\";\nimport ThresholdCard from \"./filter-cards/ThresholdCard\";\nimport GradientMapCard from \"./filter-cards/GradientMapCard\";\nimport BitmapCard from \"./filter-cards/BitmapCard\";\nimport PixelateCard from \"./filter-cards/PixelateCard\";\nimport WaveCard from \"./filter-cards/WaveCard\";\n\nconst FilterCardCont = ({refreshApp}) => {\n\n    console.log(mainImage)\n\n    const filterCards = mainImage.activeFilters.map((filter,index) => {\n\n        let operationType = filter.name\n        console.log(operationType)\n\n        switch (operationType) {\n            case 'invert':\n                return (<InvertCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp} />);\n            case 'saturation':\n                return (<SaturationCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'noise':\n                return (<NoiseCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'exposure':\n                return (<ExposureCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'threshold':\n                return(<ThresholdCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'gradientMap':\n                return(<GradientMapCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'bitmap':\n                return(<BitmapCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'pixelate':\n                return(<PixelateCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp}  />);\n            case 'wave':\n                return(<WaveCard key={index} filter={filter} filterIndex={index} refreshApp={refreshApp} />);\n            default:\n                return (<div className=\"Filter-Card\">Default Card</div>)\n            \n        }\n    });\n\n    console.log(filterCards)\n\n    return (\n        <div className=\"Filter-Card-Cont\">\n            {/* <button onMouseDown={refreshApp}>+</button>\n            <button onMouseDown={() => {mainImage.addFilter(new ByBlockFilter(bitmap,{canvas: mainImage.canvas, blockScaleFactor:4, randomPattern: false}));refreshApp()}}>+</button> */}\n            {filterCards}\n        </div>\n    )\n}\n\nexport default FilterCardCont","import React from \"react\";\n\nimport FileUpload from \"./FileUpload\";\nimport AddFilter from \"./AddFilter\";\nimport FilterCardCont from \"./FilterCardCont\";\n\nconst SettingSuite = ({uploadHandler,refreshApp}) => {\n    return (\n        <div className=\"Setting-Suite\">\n            <FileUpload eventHandler={uploadHandler} />\n            <FilterCardCont refreshApp={refreshApp} />\n        </div>\n    )\n}\n\nexport default SettingSuite","import React, {useState} from \"react\";\n\nconst Input = ({title,handler,size,value,suffix,extraText}) => {\n\n\n    let width = 200;\n\n    if(size){\n        switch(size){\n            case 'Small':\n                width = 100;\n                break;\n            case 'Medium':\n                width = 150;\n                break;\n            case 'Large':\n                width = 250;\n            case 'X-Large':\n                width = 350;\n        }\n    }\n\n    const ifTitle = () => {\n        if(title){\n            return <label>{title}</label>\n        } \n    }\n\n    const ifExtraText = () => {\n        if(extraText){\n            return <p>{extraText}</p>\n        }\n    }\n\n    return (\n        <div className=\"Input\">\n            <div>\n                <input style={{width: width}} onChange={handler} value={`${value}${suffix ? suffix : \"\"}`}/>\n                {ifExtraText()}\n            </div>\n            {ifTitle()}\n        </div>\n    )\n}\n\nexport default Input;","import React, {useState} from 'react'\n\n\nconst Select = ({options,title,handler}) => {\n\n    const optionItems = options.map((option) => \n        <option value={option}>{option}</option>\n    )\n\n    const ifTitle = () => {\n        if(title){\n            return (\n                <label>{title}</label>\n            )\n        }\n    }\n\n    return (\n        <div className=\"Select\">\n            <select onChange={handler}> {optionItems} </select>\n            {ifTitle()}\n        </div>\n    )\n}\n\nexport default Select","import React, {useState, useEffect} from \"react\";\n\nimport Input from \"./Input\";\nimport Select from \"./Select\";\n\nimport { mainImage } from \"../App\";\nimport Slider from \"./Slider\";\n\nconst ExportModal = ({display, setDisplay}) => {\n\n\n    const [exportSize, setExportSize] = useState(100);\n\n    const [pixelSize, setPixelSize] = useState('1000x1000');\n\n    const [format, setFormat] = useState('png');\n\n    const [jpegQuality, setJpegQuality] = useState(1.0);\n\n    const [filename,setFilename] = useState('filtered-image')\n\n\n    useEffect(() => {\n        updatePixelSize()\n    })\n    \n    const updatePixelSize = () => {\n        let fullW = mainImage.w/mainImage.drawResFactor;\n        let fullH = mainImage.h/mainImage.drawResFactor;\n    \n        let sizedW = Math.floor(fullW*(exportSize/100));\n        let sizedH = Math.floor(fullH*(exportSize/100));\n\n        setPixelSize(`${sizedW}px x ${sizedH}px`)\n\n    }\n\n    const handleSizeInput = (e) => {\n        // console.log(e.target.value)\n\n        if(e.target.value){\n\n            let val = e.target.value.slice(0,e.target.value.length-1);\n\n            if(val){\n                setExportSize(parseInt(val))\n            } else {\n                setExportSize(0)\n            }\n\n        } else {\n            setExportSize(0)\n        }\n    }\n\n    const handleFormatChange = (e) => {\n        setFormat(e.target.value);\n\n    }\n\n    const handleJpegQuality = (e) => {\n        setJpegQuality(parseFloat(e.target.value))\n\n    }\n\n    const handleFilename = (e) => {\n        setFilename(e.target.value);\n\n    }\n\n    const ifJpeg = () => {\n        if(format == 'jpeg'){\n            return <Slider handler={handleJpegQuality} max={1} min={0.01} step={0.01} value={1} title={'JPEG Compression Quality'}  />\n        }\n    }\n\n    const handleXOut = () => {\n        setDisplay('none')\n    }\n\n\n    const handleExport = () => {\n        mainImage.exportImage(filename,exportSize,format,jpegQuality);\n\n        setDisplay('none')\n    }\n\n\n    return (\n        <div style={{display: display}} className=\"Export-Modal\">\n            <div className=\"Export-Inner-Cont\">\n                {/* <button onMouseDown={handleXOut}>X</button> */}\n                <h1>Export</h1>\n                <div className=\"Export-Settings-Cont\">\n                    <div className=\"Export-Setting-Group\">\n                        <h3>Image Size</h3>\n                        <Input size=\"Small\" handler={handleSizeInput} value={exportSize} title=\"% of Original Size\" suffix=\"%\" extraText={pixelSize}/>\n                    </div>\n                    <div className=\"Export-Setting-Group\">\n                        <h3>Format</h3>\n                        <Select handler={handleFormatChange} options={['png','jpeg']} title=\"Select an Image Format\"/>\n                        {ifJpeg()}\n                    </div>\n                    <div className=\"Export-Setting-Group\">\n                        <h3>Filename</h3>\n                        <Input size=\"X-Large\" handler={handleFilename} value={filename} title=\"filename\" />\n                    </div>\n                </div>\n                <button onMouseDown={handleExport}>{\"Export & Download\"}</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ExportModal;","export default __webpack_public_path__ + \"static/media/image-filter-app.482f681d.png\";","import React, {useState} from 'react';\n\nimport logoType from '../assets/image-filter-app.png';\n\n\n\n\nconst InfoModal = ({display, setDisplay}) => {\n\n    const handleX = () => {\n        setDisplay('none');\n    };\n\n    return (\n        <div style={{display:display}} className=\"Info-Modal\">\n            <div className=\"Info-Inner-Cont\">\n                <button className=\"X-Out\" onMouseDown={handleX}>X</button>\n                <img src={logoType} />\n                <i>v 1.0.0</i>\n                <p><i>Little Image Filter Web App Thingy</i> is a web app designed to allow users to upload images and apply a series of filters to \n                create customizable effects</p>\n                <p>This project was created by <a href=\"http://www.zack-is.online\">Zack Hersh</a>. This application was created within the \n                    ReactJS framework and all source code can be found in this <a href=\"https://github.com/zackshersh/little-image-filter-thingy-app\">github repository</a>.\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoModal;","import React, {useEffect,useState} from \"react\";\nimport Canvas from \"./components/Canvas\";\nimport FileUpload from \"./components/FileUpload\";\n\nimport ImageDisplay from \"./components/ImageDisplay\";\nimport SettingSuite from \"./components/SettingSuite\"\n\nimport { waitASec } from \"./utils\";\n\nimport { Image, sizeCanv, applyFilters, AppliedFilter } from './ImageFunctions'\nimport ExportModal from \"./components/ExportModal\";\nimport InfoModal from \"./components/InfoModal\";\n\n\nexport let mainImage = new Image();\nconsole.log('%cMAINIMAGE CREATED FROM CLASS','color:cyan')\n\n\nfunction App() {\n\n  const [refresh,setRefresh] = useState(0);\n\n  const [exportDisplay, setExportDisplay] = useState('none');\n\n  const [infoDisplay, setInfoDisplay] = useState('none');\n\n  const refreshApp = () => {\n    console.log('%c<<<<<<<< REFRESHING APP >>>>>>>>>','background-color:cyan;color:black')\n    setRefresh(refresh + 1)\n  }\n\n  const imageUploaded = async (files) => {\n    console.log(files)\n\n    if(!files || !files[0]){\n      console.log('%c NO FILES','color:white,background:red')\n      return;\n    }\n    console.log(files[0])\n    let newImg = document.createElement('img');\n    newImg.src = URL.createObjectURL(files[0]);\n    // document.querySelector(\"#root\").appendChild(newImg)\n    console.log(newImg.style)\n\n    newImg.onload = function(){\n      mainImage.setImage(newImg);\n      console.log('%c IMAGE LOADED','color:cyan')\n\n    }\n  }\n\n  console.log('%cAPP REFRESHING!!','color:red')\n\n   \n  useEffect(() => {\n    console.log('%c USE EFFECT')\n    mainImage.init(document.querySelector('.imageCanv'))\n\n  })\n\n  return (\n    <div className=\"App\">\n      <ExportModal display={exportDisplay} setDisplay={setExportDisplay} />\n      <InfoModal display={infoDisplay} setDisplay={setInfoDisplay}/>\n      <div className=\"Image-Editor\">\n        <ImageDisplay refreshApp={refreshApp} setExportDisplay={setExportDisplay} setInfoDisplay={setInfoDisplay}/>\n        <SettingSuite refreshApp={refreshApp} uploadHandler={imageUploaded} />\n      </div>\n\n      {/* <button style={{position:'absolute',bottom:\"40px\",left:\"240px\",backgroundColor:\"yellow\"}} onMouseDown={() => {setRefresh(refresh + 1);}}>Refresh</button> */}\n      {/* <img style={{display:'none'}} id=\"placeholder-image\" src=\"./clouds.jpg\" /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}